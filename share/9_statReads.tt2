[% INCLUDE header.tt2 %]
log_warn 9_statReads.sh

if [ -e statReads.md ]; then
    log_debug "statReads.md presents";
    exit;
fi

echo -e "Table: statReads\n" > statReads.md
printf "| %s | %s | %s | %s |\n" \
    "Name" "N50" "Sum" "#" \
    >> statReads.md
printf "|:--|--:|--:|--:|\n" >> statReads.md

if [ -e 1_genome/genome.fa ]; then
    printf "| %s | %s | %s | %s |\n" \
        $(echo "Genome";   faops n50 -H -S -C 1_genome/genome.fa;) >> statReads.md
fi
if [ -e 1_genome/paralogs.fa ]; then
    printf "| %s | %s | %s | %s |\n" \
        $(echo "Paralogs"; faops n50 -H -S -C 1_genome/paralogs.fa;) >> statReads.md
fi

for PREFIX in R S T; do
    if [ -e 2_illumina/${PREFIX}1.fq.gz ]; then
        printf "| %s | %s | %s | %s |\n" \
            $(echo "Illumina.${PREFIX}"; stat_format 2_illumina/${PREFIX}1.fq.gz [% IF not opt.se %]2_illumina/${PREFIX}2.fq.gz[% END %];) >> statReads.md
    fi
    if [ -e 2_illumina/trim/${PREFIX}1.fq.gz ]; then
        printf "| %s | %s | %s | %s |\n" \
            $(echo "trim.${PREFIX}"; stat_format 2_illumina/trim/${PREFIX}1.fq.gz [% IF not opt.se %]2_illumina/trim/${PREFIX}2.fq.gz 2_illumina/trim/${PREFIX}s.fq.gz[% END %];) >> statReads.md
    fi

    parallel --no-run-if-empty -k -j 2 "
        stat_format () {
            echo \$(faops n50 -H -N 50 -S -C \$@) \
                | perl -nla -MNumber::Format -e '
                    printf qq{%d\t%s\t%d\n}, \$F[0], Number::Format::format_bytes(\$F[1], base => 1000,), \$F[2];
                '
        }

        if [ ! -e 2_illumina/Q{1}L{2}/${PREFIX}1.fq.gz ]; then
            exit;
        fi

        printf \"| %s | %s | %s | %s |\n\" \
            \$(
                echo Q{1}L{2};
[% IF not opt.se %]
                stat_format \
                    2_illumina/Q{1}L{2}/${PREFIX}1.fq.gz \
                    2_illumina/Q{1}L{2}/${PREFIX}2.fq.gz \
                    2_illumina/Q{1}L{2}/${PREFIX}s.fq.gz;
[% ELSE %]
                stat_format \
                    2_illumina/Q{1}L{2}/${PREFIX}1.fq.gz;
[% END %]
            )
        " ::: [% opt.qual2 %] ::: [% opt.len2 %] \
        >> statReads.md
done

if [ -e 3_pacbio/pacbio.fasta.gz ]; then
    printf "| %s | %s | %s | %s |\n" \
        $(echo "PacBio"; stat_format 3_pacbio/pacbio.fasta.gz;) >> statReads.md
fi

parallel --no-run-if-empty -k -j 2 "
    stat_format () {
        echo \$(faops n50 -H -N 50 -S -C \$@) \
            | perl -nla -MNumber::Format -e '
                printf qq{%d\t%s\t%d\n}, \$F[0], Number::Format::format_bytes(\$F[1], base => 1000,), \$F[2];
            '
    }

    if [ ! -e 3_pacbio/pacbio.X{1}.{2}.fasta.gz ]; then
        exit;
    fi

    printf \"| %s | %s | %s | %s |\n\" \
        \$(
            echo X{1}.{2};
            stat_format \
                3_pacbio/pacbio.X{1}.{2}.fasta.gz;
        )
    " ::: [% opt.cov3 %] ::: raw trim \
    >> statReads.md

cat statReads.md
